builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo "hello terminal"
echo hello terminal
pwd
ls --color=auto
cd freeCodeCamp
whereis
print freeCodeCamp
freeCodeCamp
print working directory
print working directory freeCodeCamp
pwd
ls --color=auto
cd test
pwd
__vsc_prompt_cmd_original
ls --color=auto
cd ..
__vsc_prompt_cmd_original
ls --color=auto
more package.json
clear
ls --color=auto
cd node_modules
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
ls --color=auto
cd freeCodeCamp
ls --color=auto
cd node_modules
ls --color=auto
ls --color=auto -l
cd has
ls --color=auto
more README.md
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
ls --color=auto
more LICENSE-MIT
clear
ls --color=auto
cd src
pwd
cd /
cd src
ls --color=auto
cd home
ls --color=auto
cd gitpod
ls --color=auto
cd /
ls --color=auto
cd workspace
ls --color=auto
cd project
ls --color=auto
cd freeCodeCamp
cd has
ls --color=auto
cd node_modules
ls --color=auto
cd has
cd src
ls --color=auto
more index.js
cd .
cd..
cd../
cd ../
cd ../
cd ../..
ls --color=auto
clear
mkdir website
ls --color=auto
cd website
ls --color=auto
echo "hello website"
echo hello website
touch index.html
touch style.css
touch styles.css
ls --color=auto
rm style.css
ls --color=auto
touch index.js
touch .gitignore
ls --color=auto
ls --color=auto --help
ls --color=auto -a
cd .
touch background.jpg
touch header.png
touch footer.jpeg
ls --color=auto
__vsc_prompt_cmd_original
touch roboto.font
touch lato.font
touch menlo.font
touch menlo.font
ls --color=auto
touch menlo.font
touch menlo.font
ls --color=auto
touch CodeAlly.svg
touch CodeRoad.svg
touch freeCodeCamp.svg
ls --color=auto
mkdir images
ls --color=auto
cp background.jpg images
cd images
ls --color=auto
ls --color=auto
cd ../
ls --color=auto
rm background.jpg
ls --color=auto
cp header.png images
ls --color=auto
cp footer.jpeg images
cd
ls --color=auto
ls --color=auto
cd ../
ls --color=auto
cd gitpod
ls --color=auto
cd /
ls --color=auto
cd workspace
ls --color=auto
cd project
ls --color=auto
cd freeCodeCamp
ls --color=auto
cd node_modules
ls --color=auto
cd has
ls --color=auto
whereis website
locate website
located website
cd test
ls --color=auto
cd ../
cd LICENSE-MIT
cd package.json
cd src
ls --color=auto
cd ../
cd ../
cd ,,/
cd ../
cd ../
cd website
cd images
ls --color=auto
cd ../
ls --color=auto
rm header.png
rm footer.jpeg
ls --color=auto
mv roboto.font roboto.woff
sl
ls --color=auto
mv lato.font lato.ttf
mv menlo.font menlo.ttf
mv menlo.ttf menlo.otf
ls --color=auto
mkdir fonts
ls --color=auto
mv roboto.woff fonts
find
mv lato.ttf fonts
mv menlo.otf fonts
find
mkdir client
mkdir client/src
mv index.html client/src
find
__vsc_prompt_cmd_original
mv index.js client/src
mv styles.css client/src
find
find client
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
ls --color=auto
cd website
ls --color=auto
find --help
cd client
ls --color=auto
cd src
ls --color=auto
find -name index.html
cd ../
find -name index.html
cd ../
find -name index.html
find -name styles.css
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
find -name src
cd website
ls --color=auto
find -name src
find website
find .
cd client
mkdir assets
cd assets
cd ..
ls --color=auto
cd src
ls --color=auto
cd ..
cd ..
ls --color=auto
mv images client/assets
cd cliet
cd client
ls --color=auto
cd assets
ls --color=auto
mv images ../../images
cd ..
cd ..
ls --color=auto
cd images
ls --color=auto
cd ..
cd client
ls --color=auto
cd assets
mkdir images
cd images
touch background.jpg
cd ../../..
__vsc_prompt_cmd_original
cd images
ls --color=auto
mv header.png ..
ls --color=auto
ls --color=auto
cd ..
ls --color=auto
find -name images
mv header.png client/assets/images
find -name header.png
find -name footer,jpeg
find -name footer.jpeg
cd images
cd ..
mv images/footer.jpeg client/assets/images
cd client
cd asstets
cd assets
cd images
find
find .
find
cd ../..
cd ..
find
rmdir images
cd images
ls --color=auto
rm background.jpg
cd ..
rmdir images
ls --color=auto
cd client/assets
mkdir icons
ls --color=auto
rmdir icos
rmdir icons
cd ../..
mkdir client/assets/icons
ls --color=auto
mv CodeAlly.svg client/assets/icons
find
find
ls --color=auto
mv CodeRoad.svg client/assets/icons
__vsc_prompt_cmd_original
ls --color=auto
mv freeCodeCamp.svg client/assets/icons
find
find
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
cd website
find
cd client/assets
find
cd ../../
find
cd client/assets
ls --color=auto
cd icons
mkdir fonts
rmdir fonts
cd ../../
cd ..
mkdir client/assets/fonts
touch client/assets/fonts/roboto-bold.woff
touch client/assets/fonts/roboto-light.woff
find
find client/asstets/fonts
find client/assets/fonts
touch client/assets/fonts/lato-bold.ttf
touch client/assets/fonts/lato-light.ttf
find client/assets/fonst
find client/assets/fonts
find
rm -help
rm -h
rm --help
ls --color=auto
\rmdir -r fonts
rmdir -r fonts
rmdir fonts -r
rmdir -r fonts
rmdir --help
rmdir -R fonts
rmdir -R /fonts
rmdir fonts -r
rm -R fonts
ls --color=auto
touch package.json
touch server.js
touch README.md
ls --color=auto
__vsc_prompt_cmd_original
echo Yay!
echo i finiished the boilerplate
echo i finiished the boilerplate!
echo i finished the boilerplate!
echo i finished the boilerplate!
echo i finished the boilerplate!
echo i finished the boilerplate!
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
cd website
echo i finished the boilerplate!
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo i finished the boilerplate!
echo i finished the boilerplate!
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
cd website
echo i finished the boilerplate!
cd ..
echo i finished the boilerplate!
cd website
echo i finished the boilerplate!
echo i finished the boilerplate!
echo i finished the boilerplate!
echo i finished the boilerplate!
echo i finished the boilerplate!
echo i finished the boilerplate!
echo i finished the boilerplate!
echo i finished the boilerplate!
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
cd website
i finished the boilerplate!
echo I finished boilerpoint!
echo I finished boilerpoint!
echo I Finished boilerpoint!
echo I finished boilerpoint!
echo I finished the boilerpoint!
echo I finished the boilerplate!
echo one more thing...
echo i made this boilerplate >> README.md
echo i Iade this boilerplate >> README.md
rm README.md
d
ls --color=auto
echo I made this boilerplate >> README.md
more README.md
echo from the command line >> README.md
more README.md
echo for the freeCodeCamp bash lessons >> README.md
more README.md
cd ..
ls --color=auto
mv website website-boilerplate
ls --color=auto
cd website-boilerplate
ls --color=auto
cd ..
ls --color=auto
cp --help
ls --color=auto
cp -r website-boilerplate toms-website
ls --color=auto
__vsc_prompt_cmd_original
find
cd toms-website
find
cd ..
find toms-website
